name: "Deno Deploy Reusable Template"
description: "Checks out the repository and publishes or deletes the project on Deno Deploy. The project name must be provided by the workflow."
inputs:
  action:
    description: "Action to perform: 'deploy' or 'delete' the project."
    required: true
    default: "deploy"
  token:
    description: "Deno Deploy access token."
    required: true
  entrypoint:
    description: "The entrypoint to the script that will be deployed."
    required: false
    default: "worker/main.ts"
  root:
    description: "The root directory of the script that will be deployed."
    required: false
    default: "."
  project_name:
    description: "The Deno Deploy project name. Must be provided by the workflow."
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2

    - name: Setup Deno
      uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x

    - name: Install deployctl
      run: |
        deno install --global --allow-read --allow-write --allow-env --allow-net --allow-run --allow-sys --no-check -r -f https://deno.land/x/deploy@1.12.0/deployctl.ts
        echo "DENO_PROJECT_NAME=${{ inputs.project_name }}" >> $GITHUB_ENV
        echo "project_name=${{ inputs.project_name }}" >> $GITHUB_OUTPUT
      shell: sh

    - name: Manage Deno Deploy Project (Deploy)
      if: inputs.action == 'deploy'
      shell: sh
      env:
        DENO_DEPLOY_TOKEN: ${{ inputs.token }}
        DENO_PROJECT_NAME: ${{ inputs.project_name }}
      run: |
        echo "Deploying project: $DENO_PROJECT_NAME"
        deployctl projects create \
          --token=$DENO_DEPLOY_TOKEN \
          --project=$DENO_PROJECT_NAME \
          --force \
          --color=never

        deployctl deploy \
          --token=$DENO_DEPLOY_TOKEN \
          --project=$DENO_PROJECT_NAME \
          --entrypoint=${{ inputs.entrypoint }} \
          --root=${{ inputs.root }} \
          --color=never

    - name: Manage Deno Deploy Project (Delete)
      if: inputs.action == 'delete'
      shell: sh
      env:
        DENO_DEPLOY_TOKEN: ${{ inputs.token }}
        DENO_PROJECT_NAME: ${{ inputs.project_name }}
      run: |
        echo "Deleting project: $DENO_PROJECT_NAME"
        deployctl projects delete \
          --token=$DENO_DEPLOY_TOKEN \
          --project=$DENO_PROJECT_NAME \
          --force \
          --color=never
